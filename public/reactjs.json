{"kind": "Listing", "data": {"modhash": "", "dist": 27, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Previous two threads - [May 2019](https://www.reddit.com/r/reactjs/comments/bjgval/beginners_thread_easy_questions_may_2019/) and [April 2019](https://www.reddit.com/r/reactjs/comments/b81xgj/beginners_thread_easy_questions_april_2019/). \n\nGot questions about React or anything else in its ecosystem? Stuck making progress on your app? Ask away! We\u2019re a friendly bunch. \n\nNo question is too simple. \ud83e\udd14\n\n---------------------------------------------\n\n\ud83c\udd98 **Want Help with your Code?** \ud83c\udd98\n\n* **Improve your chances** by putting a minimal example to either [JSFiddle](https://jsfiddle.net/Luktwrdm/) or [Code Sandbox](https://codesandbox.io/s/new). Describe what you want it to do, and things you've tried. Don't just post big blocks of code!\n\n* **Pay it forward!** Answer questions even if there is already an answer - multiple perspectives can be very helpful to beginners. Also there's no quicker way to learn than [being wrong on the Internet](https://xkcd.com/386/). \n\n**Have a question regarding code / repository organization?**\n\nIt's most likely answered within this [tweet](https://twitter.com/dan_abramov/status/1027245759232651270?lang=en).\n\n---------------------------------------------------\n\n**New to React?**\n\n**Check out the sub's sidebar!**\n\n\ud83c\udd93 Here are great, **free** resources! \ud83c\udd93\n\n* [Create React App](https://facebook.github.io/create-react-app/)\n* [Read the **official** Getting Started page](https://reactjs.org/docs/getting-started.html) on the docs.\n* [/u/acemarke](https://www.reddit.com/u/acemarke)'s [suggested resources for learning React](http://blog.isquaredsoftware.com/2017/12/blogged-answers-learn-react/)\n* [Kent Dodd's Egghead.io course](http://kcd.im/beginner-react)\n* [Tyler McGinnis' 2018 Guide](https://medium.freecodecamp.org/a-comprehensive-guide-to-react-js-in-2018-ba8bb6975597)\n* [Codecademy's React courses](https://www.codecademy.com/catalog/language/javascript)\n* [Scrimba's React Course](https://scrimba.com/g/glearnreact)\n* [Robin Wieruch's Road to React](https://roadtoreact.com)\n\n-----\n\nAny ideas/suggestions to improve this thread - feel free to comment here!\n\n----\n_Finally, an ongoing thank you to all who post questions and those who answer them. We're a growing community and helping each other only strengthens it!_", "author_fullname": "t2_2aun3ozb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Beginner's Thread / Easy Questions (June 2019)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bvxng8", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 15, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 15, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1559512897.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Previous two threads - &lt;a href=\"https://www.reddit.com/r/reactjs/comments/bjgval/beginners_thread_easy_questions_may_2019/\"&gt;May 2019&lt;/a&gt; and &lt;a href=\"https://www.reddit.com/r/reactjs/comments/b81xgj/beginners_thread_easy_questions_april_2019/\"&gt;April 2019&lt;/a&gt;. &lt;/p&gt;\n\n&lt;p&gt;Got questions about React or anything else in its ecosystem? Stuck making progress on your app? Ask away! We\u2019re a friendly bunch. &lt;/p&gt;\n\n&lt;p&gt;No question is too simple. \ud83e\udd14&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;\ud83c\udd98 &lt;strong&gt;Want Help with your Code?&lt;/strong&gt; \ud83c\udd98&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Improve your chances&lt;/strong&gt; by putting a minimal example to either &lt;a href=\"https://jsfiddle.net/Luktwrdm/\"&gt;JSFiddle&lt;/a&gt; or &lt;a href=\"https://codesandbox.io/s/new\"&gt;Code Sandbox&lt;/a&gt;. Describe what you want it to do, and things you&amp;#39;ve tried. Don&amp;#39;t just post big blocks of code!&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pay it forward!&lt;/strong&gt; Answer questions even if there is already an answer - multiple perspectives can be very helpful to beginners. Also there&amp;#39;s no quicker way to learn than &lt;a href=\"https://xkcd.com/386/\"&gt;being wrong on the Internet&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Have a question regarding code / repository organization?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s most likely answered within this &lt;a href=\"https://twitter.com/dan_abramov/status/1027245759232651270?lang=en\"&gt;tweet&lt;/a&gt;.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;strong&gt;New to React?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Check out the sub&amp;#39;s sidebar!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;\ud83c\udd93 Here are great, &lt;strong&gt;free&lt;/strong&gt; resources! \ud83c\udd93&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://facebook.github.io/create-react-app/\"&gt;Create React App&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://reactjs.org/docs/getting-started.html\"&gt;Read the &lt;strong&gt;official&lt;/strong&gt; Getting Started page&lt;/a&gt; on the docs.&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.reddit.com/u/acemarke\"&gt;/u/acemarke&lt;/a&gt;&amp;#39;s &lt;a href=\"http://blog.isquaredsoftware.com/2017/12/blogged-answers-learn-react/\"&gt;suggested resources for learning React&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://kcd.im/beginner-react\"&gt;Kent Dodd&amp;#39;s Egghead.io course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://medium.freecodecamp.org/a-comprehensive-guide-to-react-js-in-2018-ba8bb6975597\"&gt;Tyler McGinnis&amp;#39; 2018 Guide&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://www.codecademy.com/catalog/language/javascript\"&gt;Codecademy&amp;#39;s React courses&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://scrimba.com/g/glearnreact\"&gt;Scrimba&amp;#39;s React Course&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://roadtoreact.com\"&gt;Robin Wieruch&amp;#39;s Road to React&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;Any ideas/suggestions to improve this thread - feel free to comment here!&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;&lt;em&gt;Finally, an ongoing thank you to all who post questions and those who answer them. We&amp;#39;re a growing community and helping each other only strengthens it!&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bvxng8", "is_robot_indexable": true, "report_reasons": null, "author": "timmonsjg", "num_crossposts": 0, "num_comments": 149, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bvxng8/beginners_thread_easy_questions_june_2019/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/reactjs/comments/bvxng8/beginners_thread_easy_questions_june_2019/", "subreddit_subscribers": 118678, "created_utc": 1559484097.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "*We alternate between* **Who's Hiring** *(on the 1st of the month,* [*most recent one here*](https://www.reddit.com/r/reactjs/comments/bjjkgo/whos_hiring_may_2019/)*) and* **Who's Available** *(on the 15th,* [*most recent one here*](https://reddit.com/r/reactjs/comments/bp2nr0/whos_available_may_2019/)*)*\n\nWelcome to **the biggest React job board in the world**! This is like Hacker News' **Who's Hiring** but just for React.\n\nTop Level comments must be **Job Opportunities**.\n\nPlease include **Location** or any other **Requirements** in your comment. e.g. *If you require people to work on site in San Francisco, you must note that in your post. If you require an Engineering degree, you must note that in your post.*\n\nPlease include as much information as possible. **If you are remote-friendly, or open to sponsoring work visas to your country, say so! These are the top 2 questions!**\n\nIf you are looking for jobs, send a PM to the poster or post in our [Who's Available thread](https://reddit.com/r/reactjs/comments/bp2nr0/whos_available_may_2019/)!\n\nFor more ideas on what to include, use [the HN Who's hiring format](https://news.ycombinator.com/item?id=17205865)\n\nRecruiters ok\n\n## \u2b50remember to post Location details! \u2b50", "author_fullname": "t2_kcqtz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Who\u2019s Hiring? [June 2019]", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bvnjwx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 17, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 17, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1559440546.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;We alternate between&lt;/em&gt; &lt;strong&gt;Who&amp;#39;s Hiring&lt;/strong&gt; &lt;em&gt;(on the 1st of the month,&lt;/em&gt; &lt;a href=\"https://www.reddit.com/r/reactjs/comments/bjjkgo/whos_hiring_may_2019/\"&gt;&lt;em&gt;most recent one here&lt;/em&gt;&lt;/a&gt;&lt;em&gt;) and&lt;/em&gt; &lt;strong&gt;Who&amp;#39;s Available&lt;/strong&gt; &lt;em&gt;(on the 15th,&lt;/em&gt; &lt;a href=\"https://reddit.com/r/reactjs/comments/bp2nr0/whos_available_may_2019/\"&gt;&lt;em&gt;most recent one here&lt;/em&gt;&lt;/a&gt;&lt;em&gt;)&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Welcome to &lt;strong&gt;the biggest React job board in the world&lt;/strong&gt;! This is like Hacker News&amp;#39; &lt;strong&gt;Who&amp;#39;s Hiring&lt;/strong&gt; but just for React.&lt;/p&gt;\n\n&lt;p&gt;Top Level comments must be &lt;strong&gt;Job Opportunities&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;Please include &lt;strong&gt;Location&lt;/strong&gt; or any other &lt;strong&gt;Requirements&lt;/strong&gt; in your comment. e.g. &lt;em&gt;If you require people to work on site in San Francisco, you must note that in your post. If you require an Engineering degree, you must note that in your post.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Please include as much information as possible. &lt;strong&gt;If you are remote-friendly, or open to sponsoring work visas to your country, say so! These are the top 2 questions!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;If you are looking for jobs, send a PM to the poster or post in our &lt;a href=\"https://reddit.com/r/reactjs/comments/bp2nr0/whos_available_may_2019/\"&gt;Who&amp;#39;s Available thread&lt;/a&gt;!&lt;/p&gt;\n\n&lt;p&gt;For more ideas on what to include, use &lt;a href=\"https://news.ycombinator.com/item?id=17205865\"&gt;the HN Who&amp;#39;s hiring format&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Recruiters ok&lt;/p&gt;\n\n&lt;h2&gt;\u2b50remember to post Location details! \u2b50&lt;/h2&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bvnjwx", "is_robot_indexable": true, "report_reasons": null, "author": "swyx", "num_crossposts": 0, "num_comments": 31, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bvnjwx/whos_hiring_june_2019/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/reactjs/comments/bvnjwx/whos_hiring_june_2019/", "subreddit_subscribers": 118678, "created_utc": 1559411746.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hi from the Apollo team! \ud83d\udc4b\n\n&amp;#x200B;\n\nWe're excited to announce Apollo's $22M round of growth funding today! \ud83d\ude80 None of this would have been possible without the amazing React community. **Thank you all so much for your support over the years!**\n\n&amp;#x200B;\n\n[https://blog.apollographql.com/apollo-raises-22-million-to-simplify-app-development-ee30502c81b3](https://blog.apollographql.com/apollo-raises-22-million-to-simplify-app-development-ee30502c81b3)", "author_fullname": "t2_kl7s58", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Apollo raises $22 million to simplify app development", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bzr8f7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 354, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 354, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1560374908.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi from the Apollo team! \ud83d\udc4b&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;re excited to announce Apollo&amp;#39;s $22M round of growth funding today! \ud83d\ude80 None of this would have been possible without the amazing React community. &lt;strong&gt;Thank you all so much for your support over the years!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://blog.apollographql.com/apollo-raises-22-million-to-simplify-app-development-ee30502c81b3\"&gt;https://blog.apollographql.com/apollo-raises-22-million-to-simplify-app-development-ee30502c81b3&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzr8f7", "is_robot_indexable": true, "report_reasons": null, "author": "peggyrayzis", "num_crossposts": 0, "num_comments": 47, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzr8f7/apollo_raises_22_million_to_simplify_app/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/bzr8f7/apollo_raises_22_million_to_simplify_app/", "subreddit_subscribers": 118678, "created_utc": 1560346108.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_x4r8q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "virtual list support for react-beautiful-dnd is coming soon", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 65, "hide_score": false, "name": "t3_c00v14", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 23, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/fbcMevE-8QcBzc7e8mbe1aSrbCQIhzosrmwKx9S1Jng.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560425854.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "twitter.com", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/6ixYNSu_zkIyMK4LBEFvAdAKFcSZxbDgck0fwn7Z-9Y.jpg?auto=webp&amp;s=fded40e7a6c5e49ae7216c02179d2fbda0ac077c", "width": 1199, "height": 559}, "resolutions": [{"url": "https://external-preview.redd.it/6ixYNSu_zkIyMK4LBEFvAdAKFcSZxbDgck0fwn7Z-9Y.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9fd5fe5bbe79f75187bebb04b20364214c804c94", "width": 108, "height": 50}, {"url": "https://external-preview.redd.it/6ixYNSu_zkIyMK4LBEFvAdAKFcSZxbDgck0fwn7Z-9Y.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=27777fb55915e1d0fc7da63877fff40a0e615df1", "width": 216, "height": 100}, {"url": "https://external-preview.redd.it/6ixYNSu_zkIyMK4LBEFvAdAKFcSZxbDgck0fwn7Z-9Y.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d50e2745ebcfababbadba8c0ca6f52e00ead5590", "width": 320, "height": 149}, {"url": "https://external-preview.redd.it/6ixYNSu_zkIyMK4LBEFvAdAKFcSZxbDgck0fwn7Z-9Y.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=91697f65c6060e4620bbb8eae773f1639d7fd96b", "width": 640, "height": 298}, {"url": "https://external-preview.redd.it/6ixYNSu_zkIyMK4LBEFvAdAKFcSZxbDgck0fwn7Z-9Y.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=1c7a0db74e52cd8c2c97010544c089124d828c46", "width": 960, "height": 447}, {"url": "https://external-preview.redd.it/6ixYNSu_zkIyMK4LBEFvAdAKFcSZxbDgck0fwn7Z-9Y.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=698596dbd2bb3adabe40ddc98b02182d5980eecb", "width": 1080, "height": 503}], "variants": {}, "id": "9ZyBr59mhX6CWlXzrBeJNtvs0YaHcJv5FC5BXCi01Z0"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c00v14", "is_robot_indexable": true, "report_reasons": null, "author": "alexreardon", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c00v14/virtual_list_support_for_reactbeautifuldnd_is/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://twitter.com/alexandereardon/status/1138960614447915014", "subreddit_subscribers": 118678, "created_utc": 1560397054.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_kcqtz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "State of CSS (and CSS-in-JS) 2019 Results", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "hide_score": false, "name": "t3_c011dt", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 23, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 23, "approved_by": null, "thumbnail": "https://a.thumbs.redditmedia.com/f6pgOpmbKasHFaAAW9S0AkUufoOpR7KxTtxNi_rcwI4.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560427023.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "2019.stateofcss.com", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/zVJpDZ0e26CmuKrDkPSY8KByXCE56Ca5xPZkLO1U15A.jpg?auto=webp&amp;s=bfee5f8342197ee2cb57c23486e94b21f1aca041", "width": 1501, "height": 751}, "resolutions": [{"url": "https://external-preview.redd.it/zVJpDZ0e26CmuKrDkPSY8KByXCE56Ca5xPZkLO1U15A.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=73719b9f9c629591b4453c60f2cb423f411d1266", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/zVJpDZ0e26CmuKrDkPSY8KByXCE56Ca5xPZkLO1U15A.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=99326ca79af98c530f50e3f36890289a6c8482b2", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/zVJpDZ0e26CmuKrDkPSY8KByXCE56Ca5xPZkLO1U15A.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e50fc40fab01781b4162a5737f957eafd5848a1e", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/zVJpDZ0e26CmuKrDkPSY8KByXCE56Ca5xPZkLO1U15A.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0cbccc3fe79bc18d568c83c1f39c7505ee413b5f", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/zVJpDZ0e26CmuKrDkPSY8KByXCE56Ca5xPZkLO1U15A.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ba51d5fa9191e996e2155e56e83f072ca2696380", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/zVJpDZ0e26CmuKrDkPSY8KByXCE56Ca5xPZkLO1U15A.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a2b55bfb283b2eb0282a0a30355ed8b6c312eeed", "width": 1080, "height": 540}], "variants": {}, "id": "GPM4JgLWbQMlQ8GLjYN-QGs39rn1BlgKZ_GH354rb1s"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c011dt", "is_robot_indexable": true, "report_reasons": null, "author": "swyx", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c011dt/state_of_css_and_cssinjs_2019_results/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://2019.stateofcss.com/", "subreddit_subscribers": 118678, "created_utc": 1560398223.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Soruce code: [https://github.com/marko1996dj/Webshop](https://github.com/marko1996dj/Webshop)\n\nlive: [https://marko1996dj.github.io/Webshop/](https://marko1996dj.github.io/Webshop/)", "author_fullname": "t2_mjko7d4", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Roast my project", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_c03c1k", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "thumbnail": "self", "edited": 1560417382.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1560444304.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Soruce code: &lt;a href=\"https://github.com/marko1996dj/Webshop\"&gt;https://github.com/marko1996dj/Webshop&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;live: &lt;a href=\"https://marko1996dj.github.io/Webshop/\"&gt;https://marko1996dj.github.io/Webshop/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/2FCm_rHdUlFgynQ9iQw7G4AV5jRI3DA3tqUN014tIks.jpg?auto=webp&amp;s=304c3fd3fce32feb83914ad9fd3d423228fb1282", "width": 420, "height": 420}, "resolutions": [{"url": "https://external-preview.redd.it/2FCm_rHdUlFgynQ9iQw7G4AV5jRI3DA3tqUN014tIks.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=971f635d294746eb7887f34130301160de194a2a", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/2FCm_rHdUlFgynQ9iQw7G4AV5jRI3DA3tqUN014tIks.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e46c131b40150546798d9af9eec47777a5769b6b", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/2FCm_rHdUlFgynQ9iQw7G4AV5jRI3DA3tqUN014tIks.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=33c4520987c7a394429dd83c173be17b22813655", "width": 320, "height": 320}], "variants": {}, "id": "R0vdHh-9KE0GTVBSgQ0Helmz-cXoIxbgV59mOwh7N5w"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c03c1k", "is_robot_indexable": true, "report_reasons": null, "author": "kudos4datboi", "num_crossposts": 0, "num_comments": 8, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c03c1k/roast_my_project/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/c03c1k/roast_my_project/", "subreddit_subscribers": 118678, "created_utc": 1560415504.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_3sk7t1ft", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Open Source GraphQL API for Online Show (Netflix, HBO, Hulu, Amazon Prime, etc.)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 73, "hide_score": false, "name": "t3_c02h2l", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 5, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 5, "approved_by": null, "thumbnail": "https://a.thumbs.redditmedia.com/9vfLpdlCDbEomTetqan4aztLofdwCsLURYbMhB1iwm8.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "crosspost_parent_list": [{"approved_at_utc": null, "subreddit": "api", "selftext": "frisky is an open source project using GraphQL trying to serve information about TV shows and its episodes with all information like name, description, year, posters, creators, starring and the service providers where you are allowed to stream that show.\n\n&amp;#x200B;\n\n*Current Service Providers:*\n\n**Netflix, HBO, Amazon Prime, Hulu**\n\n&amp;#x200B;\n\n*Links:*\n\nGitHub: [https://github.com/prabhuomkar/frisky](https://github.com/prabhuomkar/frisky)\n\nDocs: [https://prabhuomkar.github.io/frisky](https://prabhuomkar.github.io/frisky)\n\n&amp;#x200B;\n\n***Show some love by starring the repository or contribute with data/code by reading the API documentation :)***", "author_fullname": "t2_3sk7t1ft", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Open Source GraphQL API for Online Show (Netflix, HBO, Hulu, Amazon Prime, etc.)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/api", "hidden": false, "pwls": null, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bxzw6j", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 53, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 53, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1559970630.0, "link_flair_type": "text", "wls": null, "banned_by": null, "author_flair_type": "text", "domain": "self.api", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;frisky is an open source project using GraphQL trying to serve information about TV shows and its episodes with all information like name, description, year, posters, creators, starring and the service providers where you are allowed to stream that show.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Current Service Providers:&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Netflix, HBO, Amazon Prime, Hulu&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Links:&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;GitHub: &lt;a href=\"https://github.com/prabhuomkar/frisky\"&gt;https://github.com/prabhuomkar/frisky&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Docs: &lt;a href=\"https://prabhuomkar.github.io/frisky\"&gt;https://prabhuomkar.github.io/frisky&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;em&gt;Show some love by starring the repository or contribute with data/code by reading the API documentation :)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/vYd8VKGQX9OaxAc5wndNSwIGlgHHhWgbkdG0nCE1AH4.jpg?auto=webp&amp;s=63c3d84df70176956c75074a9aaeb540b5189b37", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/vYd8VKGQX9OaxAc5wndNSwIGlgHHhWgbkdG0nCE1AH4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=adb8d0ee5c270ca980dcd4bcbb441203ad3ead7b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/vYd8VKGQX9OaxAc5wndNSwIGlgHHhWgbkdG0nCE1AH4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=48ab078900c81087855d2c1527e892a88d65e108", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/vYd8VKGQX9OaxAc5wndNSwIGlgHHhWgbkdG0nCE1AH4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6882df409ae36ca06d13f72b648011df24f81614", "width": 320, "height": 320}], "variants": {}, "id": "kEq2_PteosY4v8ixLLUxyXw8ploOV8eSqfr7nqetP_o"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2r9i3", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bxzw6j", "is_robot_indexable": true, "report_reasons": null, "author": "op_prabhuomkar", "num_crossposts": 9, "num_comments": 8, "send_replies": true, "whitelist_status": null, "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/api/comments/bxzw6j/open_source_graphql_api_for_online_show_netflix/", "parent_whitelist_status": null, "stickied": false, "url": "https://www.reddit.com/r/api/comments/bxzw6j/open_source_graphql_api_for_online_show_netflix/", "subreddit_subscribers": 2181, "created_utc": 1559941830.0, "media": null, "is_video": false}], "created": 1560437219.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.api", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/vYd8VKGQX9OaxAc5wndNSwIGlgHHhWgbkdG0nCE1AH4.jpg?auto=webp&amp;s=63c3d84df70176956c75074a9aaeb540b5189b37", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/vYd8VKGQX9OaxAc5wndNSwIGlgHHhWgbkdG0nCE1AH4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=adb8d0ee5c270ca980dcd4bcbb441203ad3ead7b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/vYd8VKGQX9OaxAc5wndNSwIGlgHHhWgbkdG0nCE1AH4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=48ab078900c81087855d2c1527e892a88d65e108", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/vYd8VKGQX9OaxAc5wndNSwIGlgHHhWgbkdG0nCE1AH4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6882df409ae36ca06d13f72b648011df24f81614", "width": 320, "height": 320}], "variants": {}, "id": "kEq2_PteosY4v8ixLLUxyXw8ploOV8eSqfr7nqetP_o"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c02h2l", "is_robot_indexable": true, "report_reasons": null, "author": "op_prabhuomkar", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "crosspost_parent": "t3_bxzw6j", "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c02h2l/open_source_graphql_api_for_online_show_netflix/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/api/comments/bxzw6j/open_source_graphql_api_for_online_show_netflix/", "subreddit_subscribers": 118678, "created_utc": 1560408419.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_1t7y74gw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Testing Components built using React Hooks with Jest + Enzyme", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-tutorial", "downs": 0, "thumbnail_height": 93, "hide_score": true, "name": "t3_c03u1b", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/H1Hnn9dyct9eUdNpKtSH1QTVYmsk0JhPX9w13GEb6Lg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560448392.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "itnext.io", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/PqntlS7aON8Nq7x6rF7-UQ22ITG0e79RSNwEbSH7C4g.jpg?auto=webp&amp;s=719d7b5ae702f63b7097147db8b3a3ee58663929", "width": 1200, "height": 801}, "resolutions": [{"url": "https://external-preview.redd.it/PqntlS7aON8Nq7x6rF7-UQ22ITG0e79RSNwEbSH7C4g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=86536fd10e15988d592518f43d1791f182dd6da0", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/PqntlS7aON8Nq7x6rF7-UQ22ITG0e79RSNwEbSH7C4g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fa98b10318a461facc0f4a92d0e9c244837a4adf", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/PqntlS7aON8Nq7x6rF7-UQ22ITG0e79RSNwEbSH7C4g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b90323b956c63d4ffa4b41fc9a230b635249065f", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/PqntlS7aON8Nq7x6rF7-UQ22ITG0e79RSNwEbSH7C4g.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b76c3aaa3bf74c1fbec200fc3fdaec0a96a242c3", "width": 640, "height": 427}, {"url": "https://external-preview.redd.it/PqntlS7aON8Nq7x6rF7-UQ22ITG0e79RSNwEbSH7C4g.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a81f775a8bc3bca898b8d88003d520c71193654f", "width": 960, "height": 640}, {"url": "https://external-preview.redd.it/PqntlS7aON8Nq7x6rF7-UQ22ITG0e79RSNwEbSH7C4g.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a82da45f31d7e5fb8dc42ef5cd93b1731269ceef", "width": 1080, "height": 720}], "variants": {}, "id": "SLJDR0VLS8cY5yKV4Gma06l5MBP5bJLu61rQgLeD_MI"}], "enabled": false}, "all_awardings": [], "media_only": false, "link_flair_template_id": "16439f02-8522-11e8-8849-0e66852ea1ba", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c03u1b", "is_robot_indexable": true, "report_reasons": null, "author": "jsloverr", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c03u1b/testing_components_built_using_react_hooks_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://itnext.io/testing-components-built-using-react-hooks-with-jest-enzyme-edb87d703756", "subreddit_subscribers": 118678, "created_utc": 1560419592.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_kcqtz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Kent C Dodds: When to useMemo and useCallback", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "hide_score": false, "name": "t3_bzwin2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/H99_FxKVkgMfXcJ3RQnHIZlwAOGRiwl8xUT2_zrQ9Pk.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560401254.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "kentcdodds.com", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/MGK_6HHFPExf1ZDt0Zhq9sy9lSuO8Qcu0DghEwgxEmo.jpg?auto=webp&amp;s=93991059d161b4b346900e886aab5a8c82661f62", "width": 720, "height": 480}, "resolutions": [{"url": "https://external-preview.redd.it/MGK_6HHFPExf1ZDt0Zhq9sy9lSuO8Qcu0DghEwgxEmo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ed21ecab3fbf12d5c674b28f6f41882dc6dad642", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/MGK_6HHFPExf1ZDt0Zhq9sy9lSuO8Qcu0DghEwgxEmo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9555f79541eeded75c71d65d2b80d83ce14702f5", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/MGK_6HHFPExf1ZDt0Zhq9sy9lSuO8Qcu0DghEwgxEmo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=70ad50a6835569fc3cd94c7cfca0aa1643e57fe1", "width": 320, "height": 213}, {"url": "https://external-preview.redd.it/MGK_6HHFPExf1ZDt0Zhq9sy9lSuO8Qcu0DghEwgxEmo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7a756c8c2e6a9f29f3a7de7dee1f2bc3dfd33c5f", "width": 640, "height": 426}], "variants": {}, "id": "hPYH3fiGqAvj0YG5-hMKYonOX5gELtPb53U8SjqJp0o"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzwin2", "is_robot_indexable": true, "report_reasons": null, "author": "swyx", "num_crossposts": 0, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzwin2/kent_c_dodds_when_to_usememo_and_usecallback/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://kentcdodds.com/blog/usememo-and-usecallback/", "subreddit_subscribers": 118678, "created_utc": 1560372454.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hi I'm new here, I mostly do devops stuff at work .A project I am working on will need to support changing the URL base of the application at runtime.\n\n\nFor example the user can deploy my docker container to myawesomesite.com, myawesomesite.com/app, myawesomesite.com/app2 or anything they want to configure it as.\n\n\nThe research I've done it seems like this is only able to be changed at build time with using PUBLIC_URL. Is there anyway to achieve this without rebuilding my application and building a new docker image per site?\n\nI've come across some issues and articles online but nothing seems to be the right way to do it. Is this just a limitation of CRA?\n\nMain github issue https://github.com/facebook/create-react-app/issues/2353", "author_fullname": "t2_3wzju", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How to build once, deploy anywhere with create-react-app?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": "link-flair-needs-help", "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_c01lsw", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Needs Help", "can_mod_post": false, "score": 3, "approved_by": null, "thumbnail": "self", "edited": 1560402495.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1560430822.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi I&amp;#39;m new here, I mostly do devops stuff at work .A project I am working on will need to support changing the URL base of the application at runtime.&lt;/p&gt;\n\n&lt;p&gt;For example the user can deploy my docker container to myawesomesite.com, myawesomesite.com/app, myawesomesite.com/app2 or anything they want to configure it as.&lt;/p&gt;\n\n&lt;p&gt;The research I&amp;#39;ve done it seems like this is only able to be changed at build time with using PUBLIC_URL. Is there anyway to achieve this without rebuilding my application and building a new docker image per site?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve come across some issues and articles online but nothing seems to be the right way to do it. Is this just a limitation of CRA?&lt;/p&gt;\n\n&lt;p&gt;Main github issue &lt;a href=\"https://github.com/facebook/create-react-app/issues/2353\"&gt;https://github.com/facebook/create-react-app/issues/2353&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/0_U5UdzAH7v3H30GOVOSnZgJ6T69Hrk7gy9ZZMkqz3M.jpg?auto=webp&amp;s=1f40c2a92ac5470f40b1e67c1df4367acb7f32a7", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/0_U5UdzAH7v3H30GOVOSnZgJ6T69Hrk7gy9ZZMkqz3M.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba79e69d629483627557e111c74ce77254c10819", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/0_U5UdzAH7v3H30GOVOSnZgJ6T69Hrk7gy9ZZMkqz3M.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=94b800ce3da260fbe35fdca6906974f981130ef1", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/0_U5UdzAH7v3H30GOVOSnZgJ6T69Hrk7gy9ZZMkqz3M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f016c68297faf3552e275d2cfa2b652bb8b6e4ff", "width": 320, "height": 320}], "variants": {}, "id": "M0w9TUCdsjalFs3aZ4jNiRt--JgCbXL-JECujYSzyzY"}], "enabled": false}, "all_awardings": [], "media_only": false, "link_flair_template_id": "c808a3ce-8520-11e8-b3d4-0e03aa55af0c", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c01lsw", "is_robot_indexable": true, "report_reasons": null, "author": "onedr0p", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c01lsw/how_to_build_once_deploy_anywhere_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/c01lsw/how_to_build_once_deploy_anywhere_with/", "subreddit_subscribers": 118678, "created_utc": 1560402022.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "To be honest, I'm falling in love with [ant.design](https://ant.design) and its scaffolder, the [pro.ant.design](https://pro.ant.design). Provides me, out of the box, a complet environment with dva (redux, sagas, router, ..), umi, i18, auth, themes, UI ilbrary, ... and, of couse, I used it in the last customer's projects and was a huge success.\n\n&amp;#x200B;\n\nBut, as a good frontend dev, I'm trying to find another scaffolder-boilerplate like [pro.ant.design](https://pro.ant.design) (yeah, I know, create-react-app, ...) to learn and use it in another projects, but I can't find any other product with the same 'volume' (all those components fitted in just only package) like pro.ant has. \n\n&amp;#x200B;\n\nDo you know something 'similar'? Any other product that gives me a huge environment ready to just develop?  \n\n&amp;#x200B;\n\nOf couse, I know that is better to begin it with your own environment and give some 'flavour', some 'rock'n'roll',  with your prefered libraries, with a custom webpack configuration, with the last version of the library X or Y. But sometimes, we need something that is 100% ready in just a few minutes and must works without any uncompatibility.\n\n&amp;#x200B;\n\nThanks in advance!\n\n&amp;#x200B;\n\nLast suggestion: If you never try [pro.ant.design](https://pro.ant.design), please, do it. You will find that is a good approach to accomplish some projects that must be done in just a few weeks and it has a loooot of requirements  :) \n\n&amp;#x200B;\n\nCheers!", "author_fullname": "t2_12qzun", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Alternatives to pro.ant.design", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": true, "name": "t3_c047nk", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1560451232.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;To be honest, I&amp;#39;m falling in love with &lt;a href=\"https://ant.design\"&gt;ant.design&lt;/a&gt; and its scaffolder, the &lt;a href=\"https://pro.ant.design\"&gt;pro.ant.design&lt;/a&gt;. Provides me, out of the box, a complet environment with dva (redux, sagas, router, ..), umi, i18, auth, themes, UI ilbrary, ... and, of couse, I used it in the last customer&amp;#39;s projects and was a huge success.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;But, as a good frontend dev, I&amp;#39;m trying to find another scaffolder-boilerplate like &lt;a href=\"https://pro.ant.design\"&gt;pro.ant.design&lt;/a&gt; (yeah, I know, create-react-app, ...) to learn and use it in another projects, but I can&amp;#39;t find any other product with the same &amp;#39;volume&amp;#39; (all those components fitted in just only package) like pro.ant has. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Do you know something &amp;#39;similar&amp;#39;? Any other product that gives me a huge environment ready to just develop?  &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Of couse, I know that is better to begin it with your own environment and give some &amp;#39;flavour&amp;#39;, some &amp;#39;rock&amp;#39;n&amp;#39;roll&amp;#39;,  with your prefered libraries, with a custom webpack configuration, with the last version of the library X or Y. But sometimes, we need something that is 100% ready in just a few minutes and must works without any uncompatibility.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Last suggestion: If you never try &lt;a href=\"https://pro.ant.design\"&gt;pro.ant.design&lt;/a&gt;, please, do it. You will find that is a good approach to accomplish some projects that must be done in just a few weeks and it has a loooot of requirements  :) &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Cheers!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c047nk", "is_robot_indexable": true, "report_reasons": null, "author": "ibanb", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c047nk/alternatives_to_proantdesign/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/c047nk/alternatives_to_proantdesign/", "subreddit_subscribers": 118678, "created_utc": 1560422432.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I did not quite understand how it works, I just looked quickly for the reference and looked at some examples. With the code below I can not access the context as it returns undefined:\n\n    let UserContext = React.createContext();\n    \n    const Example = (props) =&gt; {\n        const user = { name: 'Tania', loggedIn: true }\n        return (\n            &lt;div&gt;\n                &lt;UserContext.Provider value={user}&gt;\n                    {props.children}\n                &lt;/UserContext.Provider&gt;\n            &lt;/div&gt;\n        )\n    }\n    const App2 = (props) =&gt; {\n        const user = useContext(UserContext)\n        return (\n            &lt;Example&gt;\n                &lt;h2&gt;user is {user.name}&lt;/h2&gt;\n            &lt;/Example&gt;\n        )\n    }\n\nBut, when I create a function that returns the context, I get the value in my components:\n\n&amp;#x200B;\n\n    const ShowUser = props =&gt; {\n        const user = useContext(UserContext);\n        return user.name\n    }\n    \n    \n    const App = (props) =&gt; {\n    \n        return (\n            &lt;Example&gt;\n                &lt;h2&gt;user is &lt;ShowUser /&gt;&lt;/h2&gt;\n            &lt;/Example&gt;\n        )\n    }\n\nI do not understand why I need to do this, and according to the documentation, this does not seem to be necessary.\n\n&amp;#x200B;\n\nI also have a question about a problem I'm having: Can I use this to pass callbacks? Is it a proper way to do this? I'm using useState in a main component, but I need to pass the callback to CRUD operations in context, and this CRUD adds objects to the array, and also adds objects within an array of the main object (eg myObj.someArr {// multiple objects}.\n\n&amp;#x200B;\n\nSo I need to take a long trip to callback, let's say onMybjCreate, onMyobjDelete, onMyChildObjCreate etc ...\n\n&amp;#x200B;\n\nI know I can make it easier by moving everything manually to the first child, and the rest doing just \\[...\\] props, but it's still repetitive and tiring.\n\n&amp;#x200B;\n\nFor those who want to see the main component of a personal learning project, here it is: [https://pastebin.com/JX1BRMcP](https://pastebin.com/JX1BRMcP)", "author_fullname": "t2_3apfd8l9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "how to use useContext with context API?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_c01zqs", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1560433612.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I did not quite understand how it works, I just looked quickly for the reference and looked at some examples. With the code below I can not access the context as it returns undefined:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;let UserContext = React.createContext();\n\nconst Example = (props) =&amp;gt; {\n    const user = { name: &amp;#39;Tania&amp;#39;, loggedIn: true }\n    return (\n        &amp;lt;div&amp;gt;\n            &amp;lt;UserContext.Provider value={user}&amp;gt;\n                {props.children}\n            &amp;lt;/UserContext.Provider&amp;gt;\n        &amp;lt;/div&amp;gt;\n    )\n}\nconst App2 = (props) =&amp;gt; {\n    const user = useContext(UserContext)\n    return (\n        &amp;lt;Example&amp;gt;\n            &amp;lt;h2&amp;gt;user is {user.name}&amp;lt;/h2&amp;gt;\n        &amp;lt;/Example&amp;gt;\n    )\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But, when I create a function that returns the context, I get the value in my components:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const ShowUser = props =&amp;gt; {\n    const user = useContext(UserContext);\n    return user.name\n}\n\n\nconst App = (props) =&amp;gt; {\n\n    return (\n        &amp;lt;Example&amp;gt;\n            &amp;lt;h2&amp;gt;user is &amp;lt;ShowUser /&amp;gt;&amp;lt;/h2&amp;gt;\n        &amp;lt;/Example&amp;gt;\n    )\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I do not understand why I need to do this, and according to the documentation, this does not seem to be necessary.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I also have a question about a problem I&amp;#39;m having: Can I use this to pass callbacks? Is it a proper way to do this? I&amp;#39;m using useState in a main component, but I need to pass the callback to CRUD operations in context, and this CRUD adds objects to the array, and also adds objects within an array of the main object (eg myObj.someArr {// multiple objects}.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;So I need to take a long trip to callback, let&amp;#39;s say onMybjCreate, onMyobjDelete, onMyChildObjCreate etc ...&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I know I can make it easier by moving everything manually to the first child, and the rest doing just [...] props, but it&amp;#39;s still repetitive and tiring.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;For those who want to see the main component of a personal learning project, here it is: &lt;a href=\"https://pastebin.com/JX1BRMcP\"&gt;https://pastebin.com/JX1BRMcP&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/rc2Fna9bJ_J6PFVDuZUOKJl5CH9700Qyi0-ll1mn4C4.jpg?auto=webp&amp;s=e28867cccd2864fc170848b64bc44e6a778116b9", "width": 250, "height": 250}, "resolutions": [{"url": "https://external-preview.redd.it/rc2Fna9bJ_J6PFVDuZUOKJl5CH9700Qyi0-ll1mn4C4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6b38a59d6140109bc38ed4f88b98bd4436dfe09b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/rc2Fna9bJ_J6PFVDuZUOKJl5CH9700Qyi0-ll1mn4C4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=203ad20eac023d67d122c5f834516a4670799f63", "width": 216, "height": 216}], "variants": {}, "id": "tEFaKdpbTuSBBWpWQ-kmQ1l_KwNUpQtPpUtOwmLiL-A"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c01zqs", "is_robot_indexable": true, "report_reasons": null, "author": "rootuser_", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c01zqs/how_to_use_usecontext_with_context_api/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/c01zqs/how_to_use_usecontext_with_context_api/", "subreddit_subscribers": 118678, "created_utc": 1560404812.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Say you want to try out SSR for your React app, but you're not ready for all the weight and complexity of something like Next.js. You just want Create React App... but with SSR.\n\nThat's the idea behind [this fork](https://github.com/jamesknelson/create-react-app/tree/universal-react-scripts).\n\nThere's an open PR on Create React App's repo, but I've just published a (very) experimental package to npm so you can try it out right now with `npm init react-app` -- just set a custom `--scripts-version`. It also works with the `--typescript` version:\n\n    npm init react-app my-ssr-app --typescript --scripts-version universal-react-scripts\n\nYou can also try it within your existing app. Just swap out `react-scripts` in `package.json` with `universal-react-scripts`, and then add an `index.node.js` or `index.node.tsx`:\n\n    import fs from 'fs';\n    import React from 'react';\n    import { renderToString } from 'react-dom/server';\n    import './index.css';\n    import App from './App';\n\n    const renderer = async (request, response) =&gt; {\n      // The index.html file is a template, which will have environment variables\n      // and bundled scripts and stylesheets injected during the build step, and\n      // placed at the location specified by `process.env.HTML_TEMPLATE_PATH`.\n      //\n      // To customize the rendered HTML, you can add other placeholder strings,\n      // and replace them within this function -- just as %RENDERED_CONTENT% is\n      // replaced. Note however that if you name the placeholder after an\n      // environment variable available at build time, then it will be\n      // automatically replaced by the build script.\n      let template = fs.readFileSync(process.env.HTML_TEMPLATE_PATH, 'utf8');\n      let [header, footer] = template.split('%RENDERED_CONTENT%');\n      let body = renderToString(&lt;App /&gt;);\n      let html = header + body + footer;\n      response.send(html);\n    };\n\n    export default renderer;\n\nThen, when you run the `build` script, you get two versions: `build/web` and `build/node`. The output in `build/node` is just the compiled version of your `index.node.js` file -- which you can call from a serverless function to get SSR for your app.\n\nThat's the idea anyway. It's still pretty experimental \ud83e\uddea, so I'd really appreciate any comments (or help -- it's still \"not very well tested\")\n\nHere's the repo again: https://github.com/jamesknelson/create-react-app/tree/universal-react-scripts", "author_fullname": "t2_cc49x", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "universal-react-scripts (experimental CRA fork with SSR)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_c039gy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1560443678.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Say you want to try out SSR for your React app, but you&amp;#39;re not ready for all the weight and complexity of something like Next.js. You just want Create React App... but with SSR.&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s the idea behind &lt;a href=\"https://github.com/jamesknelson/create-react-app/tree/universal-react-scripts\"&gt;this fork&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s an open PR on Create React App&amp;#39;s repo, but I&amp;#39;ve just published a (very) experimental package to npm so you can try it out right now with &lt;code&gt;npm init react-app&lt;/code&gt; -- just set a custom &lt;code&gt;--scripts-version&lt;/code&gt;. It also works with the &lt;code&gt;--typescript&lt;/code&gt; version:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;npm init react-app my-ssr-app --typescript --scripts-version universal-react-scripts\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;You can also try it within your existing app. Just swap out &lt;code&gt;react-scripts&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt; with &lt;code&gt;universal-react-scripts&lt;/code&gt;, and then add an &lt;code&gt;index.node.js&lt;/code&gt; or &lt;code&gt;index.node.tsx&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import fs from &amp;#39;fs&amp;#39;;\nimport React from &amp;#39;react&amp;#39;;\nimport { renderToString } from &amp;#39;react-dom/server&amp;#39;;\nimport &amp;#39;./index.css&amp;#39;;\nimport App from &amp;#39;./App&amp;#39;;\n\nconst renderer = async (request, response) =&amp;gt; {\n  // The index.html file is a template, which will have environment variables\n  // and bundled scripts and stylesheets injected during the build step, and\n  // placed at the location specified by `process.env.HTML_TEMPLATE_PATH`.\n  //\n  // To customize the rendered HTML, you can add other placeholder strings,\n  // and replace them within this function -- just as %RENDERED_CONTENT% is\n  // replaced. Note however that if you name the placeholder after an\n  // environment variable available at build time, then it will be\n  // automatically replaced by the build script.\n  let template = fs.readFileSync(process.env.HTML_TEMPLATE_PATH, &amp;#39;utf8&amp;#39;);\n  let [header, footer] = template.split(&amp;#39;%RENDERED_CONTENT%&amp;#39;);\n  let body = renderToString(&amp;lt;App /&amp;gt;);\n  let html = header + body + footer;\n  response.send(html);\n};\n\nexport default renderer;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then, when you run the &lt;code&gt;build&lt;/code&gt; script, you get two versions: &lt;code&gt;build/web&lt;/code&gt; and &lt;code&gt;build/node&lt;/code&gt;. The output in &lt;code&gt;build/node&lt;/code&gt; is just the compiled version of your &lt;code&gt;index.node.js&lt;/code&gt; file -- which you can call from a serverless function to get SSR for your app.&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s the idea anyway. It&amp;#39;s still pretty experimental \ud83e\uddea, so I&amp;#39;d really appreciate any comments (or help -- it&amp;#39;s still &amp;quot;not very well tested&amp;quot;)&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s the repo again: &lt;a href=\"https://github.com/jamesknelson/create-react-app/tree/universal-react-scripts\"&gt;https://github.com/jamesknelson/create-react-app/tree/universal-react-scripts&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/mKam3X9IU_iMe5BF3CsReNoCimtccTWUnX01gEaf9gw.jpg?auto=webp&amp;s=486cf719302d14c985801c74277de5cde63ac306", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/mKam3X9IU_iMe5BF3CsReNoCimtccTWUnX01gEaf9gw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ff5603d0d927654cf6997ee6ea29720bb66b08ed", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/mKam3X9IU_iMe5BF3CsReNoCimtccTWUnX01gEaf9gw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0ea91e15246465bf9d513529fdf0d8616cdd88bd", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/mKam3X9IU_iMe5BF3CsReNoCimtccTWUnX01gEaf9gw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9fc94f45501663cef8431e667d19fcacae8ae112", "width": 320, "height": 320}], "variants": {}, "id": "slxmvP0t2galeXYY6d5u5hgkCP_CXc4Ov4n-nm9YCx4"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c039gy", "is_robot_indexable": true, "report_reasons": null, "author": "jamesknelson", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c039gy/universalreactscripts_experimental_cra_fork_with/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/c039gy/universalreactscripts_experimental_cra_fork_with/", "subreddit_subscribers": 118678, "created_utc": 1560414878.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Over the past few days I've been working on a todo app to get back into React after a long hiatus. This is one of the first projects I've done without explicit guidance (tutorials/courses).\n\nOriginally, I wanted to test my knowledge by putting together the simple, un-styled todo list. But as I got more reacquainted with React, the project kind of grew in features/scope and I ended up with something a bit more complex.\n\nDemo: https://probablyabear.github.io/todoify/\n\nRepo: https://github.com/probablyabear/todoify\n\nOverall, I feel ok about it. But I know I've probably made bad decisions in the app's structure and probably not followed best practices during the process. I'd really like input from experienced devs on the project - what I've done wrong, what could be done better, etc...\n\nThe plan going forward is to refactor and incorporate React's 'newer' features that I haven't had much experience with yet (hooks, context API), and to maybe incorporate some other methodologies (different styling approaches, newer libraries). But before that, I'd like to see if there's anything I've done in the current version of the app that I should avoid doing in the future.  \n\nCurrently the core functionality of the app includes:\n\n* CRUD operations for todos (In memory - no persistent DB yet)\n* Dynamic stats for todos\n\nIn the near future, I'd like to add the following features:\n\n* Persistent DB (Leaning towards Express/Mongo)\n* Auth system (AWS Amplify/Firebase Auth)\n* Using a proper React css library instead of linking to external css\n* Testing - Have never integrated testing with React, and would like to learn more about it\n\nSome things I had a lot of fun with:\n\n* The stats for the todos - I found it very rewarding to put together the logic for this portion and make it 'smart' enough to use the correct terminology for counting todos\n* Update operations for existing todos - This concept of children components communicating to their parents' state had confused me in the past. I was pleased when I finally got it working. (Although I'm sure I've done some of it incorrectly...)\n\nSome questions that consistently came up:\n\n* It felt kind of wrong to make updates to existing by getting a todo's ID, using that ID to find its index in the todos array, and *then* performing updates. This approach feels very limited and inefficient. What if I had a massive array of objects to work with?\n* Approaches to conditional rendering - The React docs show some basic examples, but I've seen some other more complex patterns for conditional rendering, and would like to learn more about those.\n* Correctly (immutably) updating state. I've followed some best practices shown in several courses/tutorials for updating state (copying state with spread), making my updates to the copy, and then setting the state with my copy. Not sure if this approach is necessary or particularly scalable.\n* Extracting functionality/logic to children components. One of my components, TodoTable.js is quite large and includes some functionality that should probably belong to child components. I've been trying to extract what I think shouldn't belong there to child components, but have run into issues with those children passing their data back up the state tree. \n\nOverall, I'd just like to learn what more experienced devs think of my approach/decisions and incorporate those suggestions in future versions of this project and other projects.", "author_fullname": "t2_37n1o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Put together a relatively simple todo app to get back into React. Would love some guidance on structure and best practices.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bzw4tg", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 8, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 8, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1560399355.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Over the past few days I&amp;#39;ve been working on a todo app to get back into React after a long hiatus. This is one of the first projects I&amp;#39;ve done without explicit guidance (tutorials/courses).&lt;/p&gt;\n\n&lt;p&gt;Originally, I wanted to test my knowledge by putting together the simple, un-styled todo list. But as I got more reacquainted with React, the project kind of grew in features/scope and I ended up with something a bit more complex.&lt;/p&gt;\n\n&lt;p&gt;Demo: &lt;a href=\"https://probablyabear.github.io/todoify/\"&gt;https://probablyabear.github.io/todoify/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Repo: &lt;a href=\"https://github.com/probablyabear/todoify\"&gt;https://github.com/probablyabear/todoify&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Overall, I feel ok about it. But I know I&amp;#39;ve probably made bad decisions in the app&amp;#39;s structure and probably not followed best practices during the process. I&amp;#39;d really like input from experienced devs on the project - what I&amp;#39;ve done wrong, what could be done better, etc...&lt;/p&gt;\n\n&lt;p&gt;The plan going forward is to refactor and incorporate React&amp;#39;s &amp;#39;newer&amp;#39; features that I haven&amp;#39;t had much experience with yet (hooks, context API), and to maybe incorporate some other methodologies (different styling approaches, newer libraries). But before that, I&amp;#39;d like to see if there&amp;#39;s anything I&amp;#39;ve done in the current version of the app that I should avoid doing in the future.  &lt;/p&gt;\n\n&lt;p&gt;Currently the core functionality of the app includes:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;CRUD operations for todos (In memory - no persistent DB yet)&lt;/li&gt;\n&lt;li&gt;Dynamic stats for todos&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;In the near future, I&amp;#39;d like to add the following features:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Persistent DB (Leaning towards Express/Mongo)&lt;/li&gt;\n&lt;li&gt;Auth system (AWS Amplify/Firebase Auth)&lt;/li&gt;\n&lt;li&gt;Using a proper React css library instead of linking to external css&lt;/li&gt;\n&lt;li&gt;Testing - Have never integrated testing with React, and would like to learn more about it&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Some things I had a lot of fun with:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The stats for the todos - I found it very rewarding to put together the logic for this portion and make it &amp;#39;smart&amp;#39; enough to use the correct terminology for counting todos&lt;/li&gt;\n&lt;li&gt;Update operations for existing todos - This concept of children components communicating to their parents&amp;#39; state had confused me in the past. I was pleased when I finally got it working. (Although I&amp;#39;m sure I&amp;#39;ve done some of it incorrectly...)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Some questions that consistently came up:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;It felt kind of wrong to make updates to existing by getting a todo&amp;#39;s ID, using that ID to find its index in the todos array, and &lt;em&gt;then&lt;/em&gt; performing updates. This approach feels very limited and inefficient. What if I had a massive array of objects to work with?&lt;/li&gt;\n&lt;li&gt;Approaches to conditional rendering - The React docs show some basic examples, but I&amp;#39;ve seen some other more complex patterns for conditional rendering, and would like to learn more about those.&lt;/li&gt;\n&lt;li&gt;Correctly (immutably) updating state. I&amp;#39;ve followed some best practices shown in several courses/tutorials for updating state (copying state with spread), making my updates to the copy, and then setting the state with my copy. Not sure if this approach is necessary or particularly scalable.&lt;/li&gt;\n&lt;li&gt;Extracting functionality/logic to children components. One of my components, TodoTable.js is quite large and includes some functionality that should probably belong to child components. I&amp;#39;ve been trying to extract what I think shouldn&amp;#39;t belong there to child components, but have run into issues with those children passing their data back up the state tree. &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Overall, I&amp;#39;d just like to learn what more experienced devs think of my approach/decisions and incorporate those suggestions in future versions of this project and other projects.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzw4tg", "is_robot_indexable": true, "report_reasons": null, "author": "audioverb", "num_crossposts": 0, "num_comments": 4, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzw4tg/put_together_a_relatively_simple_todo_app_to_get/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/bzw4tg/put_together_a_relatively_simple_todo_app_to_get/", "subreddit_subscribers": 118678, "created_utc": 1560370555.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_rryuw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React.js Top 10 Articles for the Past Month (v.June 2019)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 54, "hide_score": false, "name": "t3_bzqc7w", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 34, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 34, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/F3TmWIN16-rhJNNBhKXl14i0crP232STTVtv4tJYdlE.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560369663.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/U8Vky0nJUql8Qy5ztp_h7Szifj988cdIelqwvA_nXIk.jpg?auto=webp&amp;s=4f364d0d3ef184e4fcc488c9db7d26333104e765", "width": 1200, "height": 465}, "resolutions": [{"url": "https://external-preview.redd.it/U8Vky0nJUql8Qy5ztp_h7Szifj988cdIelqwvA_nXIk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a3f88f918ede24fc7c2354c825e4e9e2dd697fa2", "width": 108, "height": 41}, {"url": "https://external-preview.redd.it/U8Vky0nJUql8Qy5ztp_h7Szifj988cdIelqwvA_nXIk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=53d80d572ca06640f6bd6a6c830e150215ee1a35", "width": 216, "height": 83}, {"url": "https://external-preview.redd.it/U8Vky0nJUql8Qy5ztp_h7Szifj988cdIelqwvA_nXIk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=802e1a556b6681bba7efeeaf63d81a742d0ee23f", "width": 320, "height": 124}, {"url": "https://external-preview.redd.it/U8Vky0nJUql8Qy5ztp_h7Szifj988cdIelqwvA_nXIk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=329bc0b4ab2ef30620ba7858e7241f615454462d", "width": 640, "height": 248}, {"url": "https://external-preview.redd.it/U8Vky0nJUql8Qy5ztp_h7Szifj988cdIelqwvA_nXIk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c1e72943189b61d80914281bdf82e773246e84c7", "width": 960, "height": 372}, {"url": "https://external-preview.redd.it/U8Vky0nJUql8Qy5ztp_h7Szifj988cdIelqwvA_nXIk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=26c839433dfb3f0a1804732a12815c64990cd365", "width": 1080, "height": 418}], "variants": {}, "id": "czLvFn-9yddfghn142uVmyOSLiVG7DM4qnMc_e1baWE"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzqc7w", "is_robot_indexable": true, "report_reasons": null, "author": "mightbbest", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzqc7w/reactjs_top_10_articles_for_the_past_month_vjune/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@Mybridge/react-js-top-10-articles-for-the-past-month-v-june-2019-28a401045657", "subreddit_subscribers": 118678, "created_utc": 1560340863.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_4nuye", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Pullstate 1.0.0 released!", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 93, "hide_score": false, "name": "t3_bzspsx", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 18, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 18, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/eT7kzf_ghC7kbETySzZF4Xv3XcydaXXtrg2oOvx4BWg.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560382718.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "lostpebble.github.io", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/1djlM7ZsDCanz8ERouSs-CBj0Uqkq5cFkG6mUDhOxrY.jpg?auto=webp&amp;s=720155ab98f993fb04887267e5ef013f444d8a6f", "width": 419, "height": 281}, "resolutions": [{"url": "https://external-preview.redd.it/1djlM7ZsDCanz8ERouSs-CBj0Uqkq5cFkG6mUDhOxrY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e18a4b0dae576280e0c4b7799562f05b45acc535", "width": 108, "height": 72}, {"url": "https://external-preview.redd.it/1djlM7ZsDCanz8ERouSs-CBj0Uqkq5cFkG6mUDhOxrY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=024c3396cd8efb255445c7cf4ec964cdc92e4c8a", "width": 216, "height": 144}, {"url": "https://external-preview.redd.it/1djlM7ZsDCanz8ERouSs-CBj0Uqkq5cFkG6mUDhOxrY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e8ee91169c70889e5cd7611c964cc408ae68905e", "width": 320, "height": 214}], "variants": {}, "id": "L3CaxUibejfOaRXoiKyT3-4mTcxu1SmmbzWnWvV9iFY"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzspsx", "is_robot_indexable": true, "report_reasons": null, "author": "lostpebble", "num_crossposts": 0, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzspsx/pullstate_100_released/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://lostpebble.github.io/pullstate/", "subreddit_subscribers": 118678, "created_utc": 1560353918.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "The great University of Helsinki has released their free and open to all [fullstack development] (https://fullstackopen.com/en) course.  Even though the course is to learn fullstack web development, by the second week and the subsequent week there after you are learning about and using React.  I am just finishing up week 1 now, and feel like I have already learned so much, were the week before I couldn't even tell you what React was/or what it was used for.  As an aside this is not Helsinki's first mooc, they have [several](https://mooc.fi/en/), of which their [Java mooc ] (http://moocfi.github.io/courses/2013/programming-part-1/) is the reason I can program as all, to any degree.  I mention this only to say that they know what they are doing in teaching these courses, and I cannot recommend it enough. Good Luck.\n\nedit add link: [fullstack development] (https://fullstackopen.com/en)", "author_fullname": "t2_gbf0c", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Great free resource to learn React from the Universiry of Helsiniki", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bzutln", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1560392992.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The great University of Helsinki has released their free and open to all &lt;a href=\"https://fullstackopen.com/en\"&gt;fullstack development&lt;/a&gt; course.  Even though the course is to learn fullstack web development, by the second week and the subsequent week there after you are learning about and using React.  I am just finishing up week 1 now, and feel like I have already learned so much, were the week before I couldn&amp;#39;t even tell you what React was/or what it was used for.  As an aside this is not Helsinki&amp;#39;s first mooc, they have &lt;a href=\"https://mooc.fi/en/\"&gt;several&lt;/a&gt;, of which their &lt;a href=\"http://moocfi.github.io/courses/2013/programming-part-1/\"&gt;Java mooc &lt;/a&gt; is the reason I can program as all, to any degree.  I mention this only to say that they know what they are doing in teaching these courses, and I cannot recommend it enough. Good Luck.&lt;/p&gt;\n\n&lt;p&gt;edit add link: &lt;a href=\"https://fullstackopen.com/en\"&gt;fullstack development&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzutln", "is_robot_indexable": true, "report_reasons": null, "author": "qna1", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzutln/great_free_resource_to_learn_react_from_the/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/bzutln/great_free_resource_to_learn_react_from_the/", "subreddit_subscribers": 118678, "created_utc": 1560364192.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_2lhvfw0v", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Inject a React component into a website using a Chrome extension", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 77, "hide_score": false, "name": "t3_bzz198", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 3, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/EfKw6YJJX6M1VdwfpxshlvjcjFzodQiKE_sQjWbbYBI.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560414717.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "dev.to", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/aOvB1-aGuvrmodneq9cknFuJcnv-8UDyWSuJ_bzsng8.jpg?auto=webp&amp;s=9813b655fc03bc84f9e780b5d2a8c5e0a2c61b7c", "width": 1064, "height": 588}, "resolutions": [{"url": "https://external-preview.redd.it/aOvB1-aGuvrmodneq9cknFuJcnv-8UDyWSuJ_bzsng8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=daa2f455de85516b633b21593f893298340582cb", "width": 108, "height": 59}, {"url": "https://external-preview.redd.it/aOvB1-aGuvrmodneq9cknFuJcnv-8UDyWSuJ_bzsng8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1d344ff8a9bcd42491aa077a2fdba72bf5f367b2", "width": 216, "height": 119}, {"url": "https://external-preview.redd.it/aOvB1-aGuvrmodneq9cknFuJcnv-8UDyWSuJ_bzsng8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ac16727f40ab4c989c1c9718f571611d60be6feb", "width": 320, "height": 176}, {"url": "https://external-preview.redd.it/aOvB1-aGuvrmodneq9cknFuJcnv-8UDyWSuJ_bzsng8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=65802de70f89e8af79047566d1109383569c7981", "width": 640, "height": 353}, {"url": "https://external-preview.redd.it/aOvB1-aGuvrmodneq9cknFuJcnv-8UDyWSuJ_bzsng8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=df7e885b7d5c00a774d250694c55355c73d070ab", "width": 960, "height": 530}], "variants": {}, "id": "A_OAwzGiBZVvZ36a5TI-Vj17kt42DCNJIiZYfjU0efw"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzz198", "is_robot_indexable": true, "report_reasons": null, "author": "theQuirkyTurtl3", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzz198/inject_a_react_component_into_a_website_using_a/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "http://dev.to/hurricaneinteractive/creating-a-chrome-extension-with-react-2bnm", "subreddit_subscribers": 118678, "created_utc": 1560385917.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "A full-fledged course which will help you build a real-world app.  It will help you master all the tips and tricks of the React and the important concepts required for thorough knowledge. \n\nLearn to **build app** using React from the scratch in just few hours. - [https://youtu.be/n6aYWX8bLog](https://youtu.be/n6aYWX8bLog)\n\n&amp;#x200B;\n\nIf you enjoyed this video then do check out other cool tutorials by clicking on the link :  [**https://www.youtube.com/c/eduonix?sub\\_confirmation=1**](https://www.youtube.com/c/eduonix?sub_confirmation=1)", "author_fullname": "t2_1pjf50pl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A full course to build A Live React App From Scratch in just 4 hours", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_c019ke", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1560428502.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;A full-fledged course which will help you build a real-world app.  It will help you master all the tips and tricks of the React and the important concepts required for thorough knowledge. &lt;/p&gt;\n\n&lt;p&gt;Learn to &lt;strong&gt;build app&lt;/strong&gt; using React from the scratch in just few hours. - &lt;a href=\"https://youtu.be/n6aYWX8bLog\"&gt;https://youtu.be/n6aYWX8bLog&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;If you enjoyed this video then do check out other cool tutorials by clicking on the link :  &lt;a href=\"https://www.youtube.com/c/eduonix?sub_confirmation=1\"&gt;&lt;strong&gt;https://www.youtube.com/c/eduonix?sub_confirmation=1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/45LmQ3mzuMD84avcBSafvQ8R3HxKofmSfP2jpZtBRy0.jpg?auto=webp&amp;s=7d12bf6da321cbd89348427d34cd7b9ca1c5188e", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/45LmQ3mzuMD84avcBSafvQ8R3HxKofmSfP2jpZtBRy0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=cb78b1a7d2c1c627c48e99887bc23752ddeb4c4f", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/45LmQ3mzuMD84avcBSafvQ8R3HxKofmSfP2jpZtBRy0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ee874d622644d390318232f77a93e4f655026e68", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/45LmQ3mzuMD84avcBSafvQ8R3HxKofmSfP2jpZtBRy0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7bb10a6912d4dc1c46beda2a35c27e5de18cace4", "width": 320, "height": 240}], "variants": {}, "id": "F6Rpy71wkuIUMXz3nnDakiDjXLlioGmB_UvyBUxu9NU"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c019ke", "is_robot_indexable": true, "report_reasons": null, "author": "SuspiciousCompote6", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c019ke/a_full_course_to_build_a_live_react_app_from/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/c019ke/a_full_course_to_build_a_live_react_app_from/", "subreddit_subscribers": 118678, "created_utc": 1560399702.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_zpyfv", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Build a Twitter Clone Server with Apollo, GraphQL, Nodejs, and Crowdbotics", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 70, "hide_score": false, "name": "t3_c0182p", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/euVjYyXdSb2zy-rzAQ_lHm7TJwCrDYoNc2w_HZ_ZPlQ.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560428226.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "blog.crowdbotics.com", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/3sfbfX5VEXSThvjmXFuzk2UlFsw-ZvTq5bikCpe_O7k.jpg?auto=webp&amp;s=6b03c8534cc6c69d88a0425f5a708b03501a0760", "width": 1500, "height": 750}, "resolutions": [{"url": "https://external-preview.redd.it/3sfbfX5VEXSThvjmXFuzk2UlFsw-ZvTq5bikCpe_O7k.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fcf16fda7e43d54cc844f750ca49a616c78cfb2b", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/3sfbfX5VEXSThvjmXFuzk2UlFsw-ZvTq5bikCpe_O7k.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=39c2006bff497be99c5be5643df0ef7917d79378", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/3sfbfX5VEXSThvjmXFuzk2UlFsw-ZvTq5bikCpe_O7k.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f6a9a9becaedc6bdc8ac3eb165603d56b483f57d", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/3sfbfX5VEXSThvjmXFuzk2UlFsw-ZvTq5bikCpe_O7k.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b49ebd14244739bc6ee84d019e2cfde200e35135", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/3sfbfX5VEXSThvjmXFuzk2UlFsw-ZvTq5bikCpe_O7k.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e3065d0b871999da27fc6f218bf6ff74c51a1aff", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/3sfbfX5VEXSThvjmXFuzk2UlFsw-ZvTq5bikCpe_O7k.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c94f07c66b9f3947933d057901d5765a6acb0eed", "width": 1080, "height": 540}], "variants": {}, "id": "gPzZ-oosuSXrb4Sv64XgPXvwrdnmke7GQKx4lwzZUz0"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "c0182p", "is_robot_indexable": true, "report_reasons": null, "author": "simplicius_", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/c0182p/build_a_twitter_clone_server_with_apollo_graphql/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://blog.crowdbotics.com/build-a-twitter-clone-server-with-apollo-graphql-nodejs-and-crowdbotics/?utm_campaign=CB%20Blog&amp;utm_content=94001066&amp;utm_medium=social&amp;utm_source=twitter&amp;hss_channel=tw-836036195574427650", "subreddit_subscribers": 118678, "created_utc": 1560399426.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_15r72u79", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "TS Serializer provides TypeScript decorators to help developers with serializing/deserializing TypeScript classes into and from JSON objects.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_bzytng", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/SSIm8BYQoxkJKj0i1zbjLrsCV5FsEecBEJwCoH4QVdY.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560413454.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/qnoIDDV7-zgu3YrVNCK8-VPgO6Plcuvd-8NaCx8yfaA.jpg?auto=webp&amp;s=97b7820a57f0c53d75932694f4357bf7d1b6461e", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/qnoIDDV7-zgu3YrVNCK8-VPgO6Plcuvd-8NaCx8yfaA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fd432c05359a8af2a8b7e374e007a3ebe4c4540b", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/qnoIDDV7-zgu3YrVNCK8-VPgO6Plcuvd-8NaCx8yfaA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=84e65c4e2368a981b94bb2ebb6be71df1720e8ee", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/qnoIDDV7-zgu3YrVNCK8-VPgO6Plcuvd-8NaCx8yfaA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=557e82fe59fe6ef4b768417a8cc6cf6aae86c21e", "width": 320, "height": 320}], "variants": {}, "id": "l8At19S8iasG-e62pkOATIIBscqKIBlwF7p38yLeMaI"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzytng", "is_robot_indexable": true, "report_reasons": null, "author": "d3l3r321", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzytng/ts_serializer_provides_typescript_decorators_to/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/delete/ts-serializer", "subreddit_subscribers": 118678, "created_utc": 1560384654.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "I've been experimenting with the factory pattern and hooks today.  I had an idea that instead of creating a variable w/ useState, using the variable to hold a value in a TextField, then having a handler to handle changes; why not create a single hook that can return \\[field, setField, textFieldComponent\\] that automatically wires the field, component, and handler together.  The hook can take in any number of custom parameters or even callbacks.  Here's my POC if anyone has any feedback\n\n    const useStyles = makeStyles(theme =&gt; {\n return {\n textField: {\n marginLeft: theme.spacing(3),\n marginRight: theme.spacing(1),\n width: '80%',\n },\n }\n})\n\n    export const useTextField = (id, label, initialInput, callbackFunction) =&gt; {\n const classes = useStyles()\n const [field, setField] = useState(initialInput)\n\n    const handleTextChange = event =&gt; {\n    setField(event.target.value)\n  }\n\n    const component = &lt;TextField\n className={classes.textField}\n id={id}\n label={label}\n name={id}\n fullWidth\n    value={field}\n onChange={callbackFunction ? callbackFunction : handleTextChange}\n margin=\"normal\"\n /&gt;\n\n return [field, setField, component]\n}", "author_fullname": "t2_2tj5q69q", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anyone else using the factory pattern w/ hooks?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bzwtqj", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1560402772.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been experimenting with the factory pattern and hooks today.  I had an idea that instead of creating a variable w/ useState, using the variable to hold a value in a TextField, then having a handler to handle changes; why not create a single hook that can return [field, setField, textFieldComponent] that automatically wires the field, component, and handler together.  The hook can take in any number of custom parameters or even callbacks.  Here&amp;#39;s my POC if anyone has any feedback&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const useStyles = makeStyles(theme =&amp;gt; {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;return {\n textField: {\n marginLeft: theme.spacing(3),\n marginRight: theme.spacing(1),\n width: &amp;#39;80%&amp;#39;,\n },\n }\n})&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export const useTextField = (id, label, initialInput, callbackFunction) =&amp;gt; {\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;const classes = useStyles()\n const [field, setField] = useState(initialInput)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const handleTextChange = event =&amp;gt; {\nsetField(event.target.value)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const component = &amp;lt;TextField\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;className={classes.textField}\n id={id}\n label={label}\n name={id}\n fullWidth\n    value={field}\n onChange={callbackFunction ? callbackFunction : handleTextChange}\n margin=&amp;quot;normal&amp;quot;\n /&amp;gt;&lt;/p&gt;\n\n&lt;p&gt;return [field, setField, component]\n}&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzwtqj", "is_robot_indexable": true, "report_reasons": null, "author": "aceluby", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzwtqj/anyone_else_using_the_factory_pattern_w_hooks/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/bzwtqj/anyone_else_using_the_factory_pattern_w_hooks/", "subreddit_subscribers": 118678, "created_utc": 1560373972.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Im trying to pass a object as an attribute in a React element but my console returns me: \n\n&gt; \"\\[object Object\\]\" \n\nhere my snippet: \n\n    objectAsAttribute={{\n        someProp:someValue\n    }}\n\nhow pass an object as a prop in React? \n\n&amp;#x200B;\n\nany hint would be great,\n\nthanks", "author_fullname": "t2_1e3duwmk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "How pass object as attribute in an React's element?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bzwsev", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1560402591.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Im trying to pass a object as an attribute in a React element but my console returns me: &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;&amp;quot;[object Object]&amp;quot; &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;here my snippet: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;objectAsAttribute={{\n    someProp:someValue\n}}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;how pass an object as a prop in React? &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;any hint would be great,&lt;/p&gt;\n\n&lt;p&gt;thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzwsev", "is_robot_indexable": true, "report_reasons": null, "author": "JoonDoe", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzwsev/how_pass_object_as_attribute_in_an_reacts_element/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/bzwsev/how_pass_object_as_attribute_in_an_reacts_element/", "subreddit_subscribers": 118678, "created_utc": 1560373791.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_kcqtz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React-Teleporter: Teleport React components in the same React tree.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 140, "hide_score": false, "name": "t3_bzq27o", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/EkoiETZ2PhljEXepUkaQ2OGANy1qf0PsRzPaZ3xswEo.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560367871.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "github.com", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/X-ygg43kvZCvZ_GQqMg8x8U6L8xDy4w5j4ox1lXh1GA.jpg?auto=webp&amp;s=63e167cde36d676b7c2a4965a19906ef01caf279", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/X-ygg43kvZCvZ_GQqMg8x8U6L8xDy4w5j4ox1lXh1GA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f9642ae3af71b637f398b9ed8492a54c9c82be73", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/X-ygg43kvZCvZ_GQqMg8x8U6L8xDy4w5j4ox1lXh1GA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3fbe4639586b04169f43a6fd7f7e92a02a65d9ea", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/X-ygg43kvZCvZ_GQqMg8x8U6L8xDy4w5j4ox1lXh1GA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=26b2f831b8dd040391d4adf9e8ccfd017826ec7f", "width": 320, "height": 320}], "variants": {}, "id": "RlFJW2TqIqHVT8ax614n3GRqYoh_jp6tzp51wYZBn1M"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzq27o", "is_robot_indexable": true, "report_reasons": null, "author": "swyx", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzq27o/reactteleporter_teleport_react_components_in_the/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/smooth-code/react-teleporter", "subreddit_subscribers": 118678, "created_utc": 1560339071.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "Hello guys,\n\n&amp;#x200B;\n\nSo, I'm doing a react app and was I asked to use only keyboard arrows and enter as the way to interact with the app.\n\nI have never done this and I already spent 3h+ in web searching for some help.\n\nMy first idea was to have a onKeyDown event on each element, but the problem was that after checking which key was pressed on onKeyDown I still don't know how to pass the focused element to another element.\n\nAfter doing some research I found some libraries that handle keyboard bindings, but I'm not sure if is this what I want.\n\n&amp;#x200B;\n\nSo I have a couple questions, if you can help me, I would really appreciate.\n\n&amp;#x200B;\n\n\\- How to start the app with a html component selected? I used tabIndex=1 and besides needing to use the TAB key (which is not supposed to) it only moves the focus to the element after clicking 1 time.\n\n\\- How to define which element will be focused next (depending on if I clicked arrow Up or Down, per example)?\n\n&amp;#x200B;\n\nThanks for your time!", "author_fullname": "t2_16hc1w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Help in Keyboard Navigation", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bzyqkr", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 1, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 1, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1560412938.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello guys,&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;So, I&amp;#39;m doing a react app and was I asked to use only keyboard arrows and enter as the way to interact with the app.&lt;/p&gt;\n\n&lt;p&gt;I have never done this and I already spent 3h+ in web searching for some help.&lt;/p&gt;\n\n&lt;p&gt;My first idea was to have a onKeyDown event on each element, but the problem was that after checking which key was pressed on onKeyDown I still don&amp;#39;t know how to pass the focused element to another element.&lt;/p&gt;\n\n&lt;p&gt;After doing some research I found some libraries that handle keyboard bindings, but I&amp;#39;m not sure if is this what I want.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;So I have a couple questions, if you can help me, I would really appreciate.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;- How to start the app with a html component selected? I used tabIndex=1 and besides needing to use the TAB key (which is not supposed to) it only moves the focus to the element after clicking 1 time.&lt;/p&gt;\n\n&lt;p&gt;- How to define which element will be focused next (depending on if I clicked arrow Up or Down, per example)?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks for your time!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzyqkr", "is_robot_indexable": true, "report_reasons": null, "author": "TheAnsGuy", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzyqkr/help_in_keyboard_navigation/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/bzyqkr/help_in_keyboard_navigation/", "subreddit_subscribers": 118678, "created_utc": 1560384138.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": "", "author_fullname": "t2_apws9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Easy Feature Flags in React", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": 65, "hide_score": false, "name": "t3_bzymvj", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": 140, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "https://b.thumbs.redditmedia.com/V7ikBpBkpoaIB7Z6zWUoGydlNPs_4_AhZQb7IEIPywU.jpg", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "link", "content_categories": null, "is_self": false, "mod_note": null, "created": 1560412331.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "medium.com", "selftext_html": null, "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/m79d8YwmeDTbKx0vrYTGu7FAPWs8AmvP0sMnIhGX8pA.jpg?auto=webp&amp;s=049a8e91701f45a484366cf173895ea346b0b48f", "width": 1200, "height": 564}, "resolutions": [{"url": "https://external-preview.redd.it/m79d8YwmeDTbKx0vrYTGu7FAPWs8AmvP0sMnIhGX8pA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=63c3a4235e7e3b95ae5203036ebd7322e21891a0", "width": 108, "height": 50}, {"url": "https://external-preview.redd.it/m79d8YwmeDTbKx0vrYTGu7FAPWs8AmvP0sMnIhGX8pA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6c760925e4223aa086f19154d1e10fa9f1109891", "width": 216, "height": 101}, {"url": "https://external-preview.redd.it/m79d8YwmeDTbKx0vrYTGu7FAPWs8AmvP0sMnIhGX8pA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1ac0c99e5772d1e943f311f3a39a0baf3d1d86b6", "width": 320, "height": 150}, {"url": "https://external-preview.redd.it/m79d8YwmeDTbKx0vrYTGu7FAPWs8AmvP0sMnIhGX8pA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e46f7204bd5fa72215542f05e49e8a0f0a43899a", "width": 640, "height": 300}, {"url": "https://external-preview.redd.it/m79d8YwmeDTbKx0vrYTGu7FAPWs8AmvP0sMnIhGX8pA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=542892ef2e49e2d89f6b80fdb7779c32f047f790", "width": 960, "height": 451}, {"url": "https://external-preview.redd.it/m79d8YwmeDTbKx0vrYTGu7FAPWs8AmvP0sMnIhGX8pA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=38c7af0e826fc9f6e71610985b1b714cefcac42c", "width": 1080, "height": 507}], "variants": {}, "id": "0dbU0NU-ZWOozgfuboRJkcUp24HP2skMQdnyR6HqnyM"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzymvj", "is_robot_indexable": true, "report_reasons": null, "author": "carneasada1", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzymvj/easy_feature_flags_in_react/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@asa.schachar/powerful-feature-flags-in-react-e49ab82cf651", "subreddit_subscribers": 118678, "created_utc": 1560383531.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "reactjs", "selftext": " Hello,  \n\n\nI've been working with React for a year on a project that is running in production. We did not use a management system such as Redux.  \n\n\nWhat confuses me, is that React without a third-party management library such as Redux seems really very limited. I have read many developers saying that Redux should better not be used until one realizes it is really needed into the project; saying it is overrated, heck even Redux's creator [said so](https://twitter.com/dan_abramov/status/667498006925717504). However, it seems to me that React on its own is not enough for anything beyond a simple Todo tutorial for academic purposes.  \n\n\nHere are a few reasons:  \n\n\nMost state have to be moved up in some parent state (we try to keep pure UI state in components), and we quickly realize that state is moved up at the root of the application. If instead we keep state in their related components, and have multiple sources of truth, it ends up in very ugly unmaintainable code (mostly found in getDerivedStateFromProps). So we end up, in a natural matter, with a single store as in Redux.  \n\n\nWhen state of a parent updates, all the children are re-rendered. Some children may be costly to render, e.g. tables containing just 100+ rows of data formatted with quite some html markup may be slow, so we must systematically implement shouldComponentUpdate, which has to be maintained and may lead to bugs if we forget updating it with new rules when needed.  \n\n\nState must be immutable. Updating state leads to a lot of boilerplate code. We create pure functions helping updating parts of the state, which may be compared to reducers in Redux. Again, in a natural manner, we were tending towards Redux's patterns.  \n\n\nTaking a step back, I'm asking myself, in general in a frontend JavaScript code, is it really the only way of working? You update the parent, all your children are re-rendered, and have to add shouldComponentUpdate here and there in order to keep performance acceptable; isn't there a more efficient way of working with UI components in general? What are the alternatives? Isn't there a clean way to keep state synchronized across components?\n\nWhy am I coding like that? Why does React work the way it does?  \n\n\nIf a state management is a must, then why doesn't the default React library include a default one? It's confusing that you have to rely on a third party library in order to make anything maintainable with React.  \n\n\nI have only known React. How do other frameworks solve state management? Are there other ideas out there?", "author_fullname": "t2_3xk7np85", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "React without a third-party state management library", "link_flair_richtext": [], "subreddit_name_prefixed": "r/reactjs", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "thumbnail_height": null, "hide_score": false, "name": "t3_bzqezg", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1560370128.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "domain": "self.reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello,  &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been working with React for a year on a project that is running in production. We did not use a management system such as Redux.  &lt;/p&gt;\n\n&lt;p&gt;What confuses me, is that React without a third-party management library such as Redux seems really very limited. I have read many developers saying that Redux should better not be used until one realizes it is really needed into the project; saying it is overrated, heck even Redux&amp;#39;s creator &lt;a href=\"https://twitter.com/dan_abramov/status/667498006925717504\"&gt;said so&lt;/a&gt;. However, it seems to me that React on its own is not enough for anything beyond a simple Todo tutorial for academic purposes.  &lt;/p&gt;\n\n&lt;p&gt;Here are a few reasons:  &lt;/p&gt;\n\n&lt;p&gt;Most state have to be moved up in some parent state (we try to keep pure UI state in components), and we quickly realize that state is moved up at the root of the application. If instead we keep state in their related components, and have multiple sources of truth, it ends up in very ugly unmaintainable code (mostly found in getDerivedStateFromProps). So we end up, in a natural matter, with a single store as in Redux.  &lt;/p&gt;\n\n&lt;p&gt;When state of a parent updates, all the children are re-rendered. Some children may be costly to render, e.g. tables containing just 100+ rows of data formatted with quite some html markup may be slow, so we must systematically implement shouldComponentUpdate, which has to be maintained and may lead to bugs if we forget updating it with new rules when needed.  &lt;/p&gt;\n\n&lt;p&gt;State must be immutable. Updating state leads to a lot of boilerplate code. We create pure functions helping updating parts of the state, which may be compared to reducers in Redux. Again, in a natural manner, we were tending towards Redux&amp;#39;s patterns.  &lt;/p&gt;\n\n&lt;p&gt;Taking a step back, I&amp;#39;m asking myself, in general in a frontend JavaScript code, is it really the only way of working? You update the parent, all your children are re-rendered, and have to add shouldComponentUpdate here and there in order to keep performance acceptable; isn&amp;#39;t there a more efficient way of working with UI components in general? What are the alternatives? Isn&amp;#39;t there a clean way to keep state synchronized across components?&lt;/p&gt;\n\n&lt;p&gt;Why am I coding like that? Why does React work the way it does?  &lt;/p&gt;\n\n&lt;p&gt;If a state management is a must, then why doesn&amp;#39;t the default React library include a default one? It&amp;#39;s confusing that you have to rely on a third party library in order to make anything maintainable with React.  &lt;/p&gt;\n\n&lt;p&gt;I have only known React. How do other frameworks solve state management? Are there other ideas out there?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "confidence", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/JyISax_Cy9aj_BAhPQIEtF4H7mQVoh-8FXV9qOlgbDc.jpg?auto=webp&amp;s=ec8bf6e0f8203fc6123e200ad262d41e120b3161", "width": 400, "height": 400}, "resolutions": [{"url": "https://external-preview.redd.it/JyISax_Cy9aj_BAhPQIEtF4H7mQVoh-8FXV9qOlgbDc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d1feee1755be2637c597edfa1f5e262cf72fa4b1", "width": 108, "height": 108}, {"url": "https://external-preview.redd.it/JyISax_Cy9aj_BAhPQIEtF4H7mQVoh-8FXV9qOlgbDc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=cdb5ed9f048a567519674ff21a296bd2d20ff596", "width": 216, "height": 216}, {"url": "https://external-preview.redd.it/JyISax_Cy9aj_BAhPQIEtF4H7mQVoh-8FXV9qOlgbDc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f3a1e5c5cd777e805fb336b07794b3b48582292f", "width": 320, "height": 320}], "variants": {}, "id": "kes9RJpCIkstcR1EnU61tFtvEBRpqNaxKD8CXEqNy5o"}], "enabled": false}, "all_awardings": [], "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2zldd", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "bzqezg", "is_robot_indexable": true, "report_reasons": null, "author": "thojanssens1", "num_crossposts": 2, "num_comments": 30, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/reactjs/comments/bzqezg/react_without_a_thirdparty_state_management/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/reactjs/comments/bzqezg/react_without_a_thirdparty_state_management/", "subreddit_subscribers": 118678, "created_utc": 1560341328.0, "media": null, "is_video": false}}], "after": "t3_bzqezg", "before": null}}